<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<meta http-equiv="Content-Language" content="en">
	<meta http-equiv="Content-Style-Type" content="text/css">
	<meta http-equiv="Content-Script-Type" content="text/javascript">
	<meta name="author" content="OpenHSP3 Project">
	<meta name="keywords" content="HSP,HSP3,HotSoupProcessor,更新情報,アップデート,HSP3.7">
	<meta name="description" content="HSPの更新情報を掲載">
	<link href="../main.css" rel="stylesheet" type="text/css" media="all">
	<title>HSP3 Update Guide</title>
</head>
<body>
	<div id="CONTAINER">
		<!-- ヘッダー -->
		<p id="COPY">HSP : Hot Soup Processor ver3.7 / onion software 1997-2024(c)</p>
		<img src="hsp3ttl.jpg" alt="title" width="640" height="200">
		<h1>HSP3 Update Guide</h1>

		<!-- 目次 -->
		<ol>
			<li><a href="#INTRO">Introduction</a></li>
			<li><a href="#HSP3UPDATE">HSP3 Update Overview</a></li>
			<li><a href="#LINUX">About Linux Version Availability</a></li>
			<li><a href="#HSPOBSOLETE">End of Package Inclusion</a></li>
			<li><a href="#DIFF2">Differences from HSP2</a></li>
			<li><a href="#SUMMARY">HSP3 Overview</a>
				<ol>
					<li><a href="#SUMMARY_ENV">Operating Environment</a></li>
					<li><a href="#SUMMARY_CMD">Command Additions</a></li>
					<li><a href="#SUMMARY_FUNC">Function Support</a></li>
					<li><a href="#SUMMARY_DOUBLE">Real Number Support</a></li>
					<li><a href="#SUMMARY_PLUGIN">Plugins</a></li>
					<li><a href="#SUMMARY_MODULE">Modules</a></li>
					<li><a href="#SUMMARY_LABELVAR">Label Type Variable Support</a></li>
					<li><a href="#SUMMARY_DLL">DLL Calling</a></li>
					<li><a href="#SUMMARY_COM">COM Calling</a></li>
					<li><a href="#SUMMARY_EDITOR">Script Editor</a></li>
					<li><a href="#SUMMARY_PEAS">peas Editor</a></li>
					<li><a href="#SUMMARY_TVBLOWSER">HSPTV Browser</a></li>
				</ol>
			</li>
			<li><a href="#FROM2">Script Migration from ver2.x</a>
				<ol>
					<li><a href="#FROM2_CALC">Calculation Order Changes</a></li>
					<li><a href="#FROM2_FUNC">Functionization of Commands</a></li>
					<li><a href="#FROM2_CMD">Changes in Commands and System Variables</a></li>
					<li><a href="#FROM2_MODULE">Specification Changes for Module Functions</a></li>
					<li><a href="#FROM2_PLUGIN">Plugin Specification Changes</a></li>
					<li><a href="#FROM2_ARRAY">Changes Regarding Arrays</a></li>
					<li><a href="#FROM2_MEMBUF">Changes Regarding Memory Buffers</a></li>
					<li><a href="#FROM2_PEEK">Changes to the peek Command</a></li>
					<li><a href="#FROM2_DIFF">Is HSP3 Difficult? (About Compatibility Macros with HSP2)</a></li>
				</ol>
			</li>
		</ol>
		
		<!-- 本文 -->
		<h2 id="INTRO">Introduction</h2>
		<p>
			HSP3.7 is a new version that replaces HSP3.6.
			There are no significant specification changes, and it is designed to operate with backward compatibility, while various functions have been added.
		</p>
		<p>
			Here, we will explain the differences between HSP3.7 and HSP3.6,
			as well as the differences between HSP2.x and HSP3 in general.
		</p>


	<h2 id="HSP3UPDATE">HSP3 Update Overview</h2>
		<p>
		You can use HSP3.7 in the same way as previous versions of HSP3, without being particularly aware of any changes.<br>
		For details on the functions added in HSP3.7, please refer to <a href="update37.htm" target="_blank">"HSP3.7 New Feature Highlights"</a>.
		For the detailed update history of HSP3, please refer to <a href="history.txt" target="_blank">"HSP3 Update History"</a>.<br>
		HSP3.7 includes a new <a href="hsp3update.html">HSP3 Updater (HSP3Update)</a>, which allows you to change the system to previous versions, including beta versions. It also allows you to easily install additional data such as necessary functions, samples, and materials.
		</p>
		<dl>
			<dt>HSP3.7 New Feature Highlights</dt>
			<dd><p><a href="update37.htm" target="_blank">update37.htm</a></p></dd>
			<dt>HSP3 Update History</dt>
			<dd><p><a href="history.txt" target="_blank">history.txt</a></p></dd>
			<dt>HSP3 Updater (HSP3Update) Manual</dt>
			<dd><p><a href="hsp3update.html" target="_blank">hsp3update.html</a></p></dd>
		</dl>
		<p>
		Sample scripts that allow you to easily try out the new features added in HSP3.7 are included in the "sample/new37" folder.
		Be sure to actually run and try out the operation of the new samples.
		</p>


	<h2 id="LINUX">About Linux Version Availability</h2>
		<p>
			The latest version that runs on Linux GUI environment (X Window System) and Raspberry Pi (Raspbian) is available on github.
		</p>
		<pre>
	git clone https://github.com/onitama/OpenHSP
		</pre>
		<p>
			Please acquire it in the form like above.
			For more information, please see the following page.
			The latest version acquisition and installation method are also explained.
		</p>
		<pre>
	HSP3 for Linux/Raspberry Pi
	<a href="https://hsp.tv/make/hsp3linux_pi.html" target="_blank">https://hsp.tv/make/hsp3linux_pi.html</a>
		</pre>


	<h2 id="HSPOBSOLETE">End of Package Inclusion</h2>
		<p>
		llmod3, HGIMG / HGIMGX (3D drawing plugin) / HGIMG3 /HSP3MT (runtime)/HSPLet packages, which were included in the previous full set, will no longer be included.
		It is possible to continue using the runtime included in the old package, but it is treated as deprecated, so manuals and help will not be provided.
		</p>
		<UL>
		<LI>llmod3 -> Please use various modules compatible with HSP3
		<LI>HGIMG / HGIMGX (3D drawing plugin) / HGIMG3 -> Please use HGIMG4
		<LI>HSPDX (2D drawing plugin) -> Please use HSP3DISH
		<LI>HSP3MT runtime -> Please use hsp3utf or hsp3_64
		<LI>HSPLet runtime -> Please use HSP3Dish(html5)
		</UL>
		<p>
		These plugins/modules have old code, and their operation on the current Windows is not guaranteed.
		Compilation and execution of existing code is supported, but may not be supported in future versions.
		</p><p>
		The HSPDX plugin is included in the plugin files themselves, as there are many long-time users and it can still be executed on the current system, but its new use is not recommended.
		</p><p>
		The HSP3MT runtime and library were created for older systems, and
		new runtimes such as hsp3utf and hsp3_64 can be used instead.
		Also, because the source is published as OpenHSP, the distribution of the library itself is
		It was judged that it was no longer necessary.
		</p><p>
		HGIMG3 widely supports 3D functions using DirectX, but most of the functions have been inherited by HGIMG4.
		For HGIMG3, you can use the <a href="hsp3update.html">HSP3 Updater (HSP3Update)</a> to add functions.
		</p>


	<h2 id="DIFF2">Differences from HSP2</h2>
		<p>
			HSP3 is the latest version of HSP3, which has been significantly reviewed and reconstructed from the specifications and programs of HSP2 and earlier.
			While inheriting the assets of familiarity, ease of learning, and simplicity cultivated up to ver2.61,
			It is being developed to provide an environment with a wider range of applications and versatility.
		</p>
		<p>
			We hope that it will become a scripting language that can be widely used by everyone from beginners to advanced users, including migration from previous versions.
		</p>
		<p>
			HSP3 is structured around a completely newly designed core system.
			This core system has a platform-independent script engine and an architecture that allows free functional expansion.
			Under a simple and powerful core system, we aim to provide expansion components compatible with various platforms, and realize a system that achieves stable portability and productivity.
		</p>
		<p>
			By inheriting the features of the format and rules up to now and reviewing unnecessary specifications, it is possible to effectively utilize abundant materials and past assets, and the barrier to migrate to the next version is also lowered.
		</p>
		<p>
			HSP3 inherits the format and rules up to ver2.61, but it is not completely compatible.<br>
			Even if HSP3 is newly installed, HSP2.x will not be deleted and can be used independently.
		</p>
		<p>
			In order to migrate source scripts up to ver2.61 to ver3.0, please refer to the precautions and change the incompatible parts.
		</p>
		<p>
			Also, even after ver3.0 is officially released, the distribution and maintenance of ver2.x will continue for a while.
			We would like to make efforts to ensure that all existing users can smoothly migrate to ver3.0.
		</p>


		<h2 id="SUMMARY">HSP3 Overview</h2>
		<p>
			Here is an overview of HSP3 for users who have used HSP2.
		</p>
		<h3 id="SUMMARY_ENV">Operating Environment</h3>
		<p>
			The core system of HSP3 operates on WIN32.
			HSP2.x supported versions from Windows 95 onwards, but HSP3 requires Windows 98 or later as its operating environment.
			(However, it can operate in an environment with Windows 95 + Internet Explorer 4 or later.)
		</p>

		<h3 id="SUMMARY_CMD">Command Additions</h3>
		<p>
			Image-related commands that were plugin commands in HSP2.x are now standard equipment.
			Many functions are supported, such as the grote, grect, and gsquare commands for scaling and rotating images,
			the circle command for drawing circles, and the hsvcolor command for specifying colors using HSV.
		</p>

		<h3 id="SUMMARY_FUNC">Function Support</h3>
		<p>
			You can now include functions in expressions.
			As a result, some commands and system variables have been replaced with functions.
		</p>

		<h3 id="SUMMARY_DOUBLE">Real Number Support</h3>
		<p>
			Supports real number calculations using 64-bit floating point numbers.
			Equipped with mathematical functions such as trigonometric functions and square roots,
			You can perform highly accurate calculations.
		</p>
		
		<h3 id="SUMMARY_PLUGIN">Plugins</h3>
		<p>
			The specifications for extension plugins have been greatly expanded from 3.0.
			By creating a plugin exclusively for 3.0, you can greatly expand the system, such as expanding types, drawing systems,
			and managing events.
		</p>
		<p>
			Almost all plugins up to HSP2.61 can be used as they are using the compatibility function.
			In addition, all extension plugins that were included as standard with HSP2.61 are included with the same names.
		</p>
		<p>
			In addition to this, HSP3 includes HSPINET, which specializes in HTTP and FTP network access, and HGIMG3, which supports advanced 3D processing.
			Furthermore, the plugin HSPCV, which specializes in advanced image processing, is also included.
		</p>

		<h3 id="SUMMARY_MODULE">Modules</h3>
		<p>
			Module functionality enhances script reusability and maintainability by isolating script namespaces and variable scopes.
			It's an advanced mechanism linked to the creation of user-defined commands, module variable creation,
			and local variable definition.
			For details, please see the "<a href="module.htm">Module Function Guide</a>".
		</p>

		<h3 id="SUMMARY_LABELVAR">Label Variable Support</h3>
		<p>
			Label variables are a mechanism for storing arbitrary position information in a script into a variable.
			Storing label information in variables further expands the possibilities of scripts.
		</p>

		<h3 id="SUMMARY_DLL">DLL Calling</h3>
		<p>
			External DLLs such as WIN32API can be easily defined and called.
			The loadlib related commands and commands included in llmod in HSP2.61 are not supported in HSP3.
		</p>

		<h3 id="SUMMARY_COM">COM Calling</h3>
		<p>
			Supports calling Windows COM components.
			Advanced technologies such as COM automation and COM events can be easily used.
			This allows you to easily call the latest technologies such as IE components, XML parsers, regular expression search and replacement, and RSS acquisition from scripts.
		</p>

		<h3 id="SUMMARY_EDITOR">Script Editor</h3>
		<p>
			A new script editor is included.
			It has become highly functional by removing editing size restrictions, adding keyword coloring, and adopting tabs. (The previous version is also included as HSED3LE.EXE.)
			The peripheral tools (help browser, etc.) called from the script editor are also included in an updated version.
		</p>

		<h3 id="SUMMARY_PEAS">peas Editor</h3>
		<p>
			The peas editor provides a simple programming environment that automatically generates scripts by simply determining the template parts and parameters and options.
			Users can create programs not only by writing scripts in the editor as before, but also by simply using mouse operations.
		</p>

		<h3 id="SUMMARY_TVBLOWSER">HSPTV Browser</h3>
		<p>
			The HSPTV browser is included as standard.
			This is a content viewer that is updated over the network.
			You can easily download and enjoy online HSP information and the latest software.
		</p>


		<h2 id="FROM2">Script Migration from ver2.x</h2>
		<p>
			Here, we will inform you of changes and points to note for those who have already used ver2.x and want to migrate scripts.
		</p>
		<h3 id="FROM2_CALC">Change in Calculation Order</h3>
		<p>
			In HSP3, operators in calculation formulas are prioritized.
			As with many languages, "*" and "/" are calculated before "+" and "-".
			As a result, the results may differ from the calculation formulas (processed from the left) up to ver2.x.
			See the "Language Specification Guide" for details on precedence.
		</p>
		
		<h3 id="FROM2_FUNC">Functionalization of Commands</h3>
		<p>
			Some commands are implemented as functions.
			Therefore, some of the commands used in ver2.x can no longer be used as they are.
			The main commands that have been functionalized are as follows.
		</p>
		<ul>
			<li>int</li><li>str</li><li>rnd</li><li>strlen</li><li>peek</li><li>wpeek</li>
			<li>instr</li><li>strmid</li><li>getpath</li><li>ginfo</li><li>sysinfo</li>
		</ul>
		<p>
			For example, <code>rnd a, 10</code> will be in the format <code>a = rnd(10)</code>.
		</p>

		<h3 id="FROM2_CMD">Changes to Commands and System Variables</h3>
		<p>
			The following keywords that existed in HSP 2.x have been changed in 3.0.
			In most cases, equivalent operations can be performed using alternative commands.
			In addition, by using a macro (hsp261cmp.as) that operates compatibly with 2.x,
			a certain degree of compatibility can be achieved.
		</p>
		<table class="keywordlist" summary="List of commands changed in HSP3">
			<caption>Changed Commands</caption>
			<tr><th>Command Name</th><th>Changes</th></tr>
			<tr><td>rnd</td><td>Became a function in the format rnd()</td></tr>
			<tr><td>gettime</td><td>Became a function in the format gettime()</td></tr>
			<tr><td>peek</td><td>Became a function in the format peek()</td></tr>
			<tr><td>wpeek</td><td>Became a function in the format wpeek()</td></tr>
			<tr><td>notemax</td><td>Became a system variable (macro) called notemax</td></tr>
			<tr><td>strlen</td><td>Became a function in the format strlen()</td></tr>
			<tr><td>sysinfo</td><td>Became a function in the format sysinfo()</td></tr>
			<tr><td>getpath</td><td>Became a function in the format getpath()</td></tr>
			<tr><td>strmid</td><td>Became a function in the format strmid()</td></tr>
			<tr><td>instr</td><td>Became a function in the format instr()</td></tr>
			<tr><td>ginfo</td><td>Became a function in the format ginfo()</td></tr>

			<tr><td>sndload</td><td>The name has been changed to the mmload command</td></tr>
			<tr><td>snd</td><td>The name has been changed to the mmplay command</td></tr>
			<tr><td>sndoff</td><td>The name has been changed to the mmstop command</td></tr>

			<tr><td>skiperr</td><td>Please use interruption by the onerror command</td></tr>
			<tr><td>objsend</td><td>The sendmsg command is available as an alternative</td></tr>
			<tr><td>palfade</td><td>No alternative command is available</td></tr>
			<tr><td>palcopy</td><td>No alternative command is available</td></tr>
			<tr><td>getpal</td><td>Has the same functionality as palcolor</td></tr>
			<tr><td>text</td><td>The text and emes commands are provided in the "hsp3util.as" module</td></tr>
		</table>
		<table class="keywordlist" summary="List of system variables changed in HSP3">
			<caption>Changed System Variables</caption>
			<tr><th>System Variable Name</th><th>Changes</th></tr>
			<tr><td>csrx</td><td>Name changed to ginfo_cx macro</td></tr>
			<tr><td>csry</td><td>Name changed to ginfo_cy macro</td></tr>
			<tr><td>paluse</td><td>Name changed to ginfo_paluse macro</td></tr>
			<tr><td>dispx</td><td>Name changed to ginfo_dispx macro</td></tr>
			<tr><td>dispy</td><td>Name changed to ginfo_dispy macro</td></tr>
			<tr><td>rval</td><td>Name changed to ginfo_r macro</td></tr>
			<tr><td>gval</td><td>Name changed to ginfo_g macro</td></tr>
			<tr><td>bval</td><td>Name changed to ginfo_b macro</td></tr>
			<tr><td>winx</td><td>Name changed to ginfo_winx macro</td></tr>
			<tr><td>winy</td><td>Name changed to ginfo_winy macro</td></tr>
			<tr><td>cmdline</td><td>Name changed to dir_cmdline macro</td></tr>
			<tr><td>windir</td><td>Name changed to dir_win macro</td></tr>
			<tr><td>curdir</td><td>Name changed to dir_cur macro</td></tr>
			<tr><td>exedir</td><td>Name changed to dir_exe macro</td></tr>
			<tr><td>sysdir</td><td>Name changed to dir_sys macro</td></tr>
			<tr><td>prmx</td><td>No longer needed due to specification changes of the ginfo command</td></tr>
			<tr><td>prmy</td><td>No longer needed due to specification changes of the ginfo command</td></tr>
		</table>
		<p>
			loadlib related commands are inherited by DLL calls using #uselib/#func,
			or external calls using the callfunc function.
			The following commands are not supported in HSP3.
			(ll_poke, ll_peek, etc. can be replaced with "dupptr command + poke command / peek function".)
		</p>
		<ul>
			<li>ll_ret</li>
			<li>ll_retset</li>
			<li>ll_getptr</li>
			<li>ll_peek</li>
			<li>ll_peek1</li>
			<li>ll_peek2</li>
			<li>ll_peek4</li>
			<li>ll_poke</li>
			<li>ll_callfunc</li>
			<li>ll_n</li>
			<li>ll_poke1</li>
			<li>ll_poke2</li>
			<li>ll_poke4</li>
			<li>ll_libfree</li>
			<li>ll_callfnv</li>
			<li>ll_call</li>
			<li>ll_free</li>
			<li>ll_s</li>
			<li>ll_p</li>
			<li>ll_str</li>
			<li>ll_dll</li>
			<li>ll_func</li>
			<li>ll_type</li>
			<li>ll_z</li>
			<li>ll_libload</li>
			<li>ll_getproc</li>
			<li>ll_bin</li>
		</ul>

		<h3 id="FROM2_MODULE">Module Function Specification Changes</h3>
		<p>
			The module function specification has been changed.
			If you want to pass parameters other than numbers to user-defined commands, you need to change the script.
			Also, please note that there are some functional changes in the mref command.
			For details, please see the "Language Specification Guide".
		</p>
		
		<h3 id="FROM2_PLUGIN">Plugin Specification Changes</h3>
		<p>
			Although it supports all plugin conventions after HSP2.5,
			please note that there are some restrictions due to internal specification changes in HSP3.
		</p>
		<ul>
			<li>The BMSCR structure can only refer to fields from flag to color.</li>
			<li>The flag field (type type value) and len field (array information) of the PVal structure
			cannot be rewritten on the DLL side.</li>
			<li>It is not possible to access string array variables from the PVal structure.</li>
		</ul>
		<p>
			In other respects, information equivalent to HSP ver2.61 is passed.
			Please note that the following restrictions occur in HSP2.61 compatible plugins.
			Also, the plugin compatibility function does not guarantee the operation of all HSP2.x plugins.
		</p>
		<p>
			When assigning a value to a variable from a plugin, the buffer is not automatically expanded.
			Be careful not to cause a buffer overflow.
		</p>
		<p>
			The full set of archives includes hspda, hspdb, hspdx,
			hspext, hspsock, hgimg(x) and header files from the plugins included with ver2.61.
			These plugins are DLLs that are exactly the same as those included with ver2.61.
			Files and operate using the plugin compatibility function of 3.0.
			(The compatibility of user-created plugins that are not included with HSP depends on their respective specifications.)
		</p>
		<p>
			For hspdx.dll, the palette of the image loaded in palette mode is not reflected due to the HSP3.0 picload specification change. For this reason, a module collection that defines the bmppalette command for extracting palette data from image files,
			"hsp3util.as" is provided.
			See the hspdx sample script for usage examples.
		</p>
		<h3 id="FROM2_ARRAY">Changes Regarding Arrays</h3>
		<p>
			From ver3.0, the handling of array variables has been significantly changed.
			In ver2.x, the maximum number of elements in the array was secured using the dim or sdim command before use,
			but in ver3.0, it is now possible to assign values to array variables without securing the array beforehand.
			(However, an error will occur if you reference the contents of an array that has not been assigned a value.)
		</p>
		<p>
			In ver2.x, arrays from 0 to 15 (in the case of numeric variables) were available by default,
			but in ver3.0, there is no default allocation (only 0).
			Due to this difference, some scripts may encounter errors while referencing arrays.
		</p>
		
		<h3 id="FROM2_MEMBUF">Changes Regarding Memory Buffers</h3>
		<p>
			From HSP3, string-type variables can handle data of any size due to automatic expansion.
			Therefore, when creating array variables of string type, multiple variable buffers of variable length will be created,
			resulting in a management structure that is not a continuous memory space as in ver2.x.
			As a result, when executing commands that directly manipulate memory, such as bsave and bload, on string-type array variables,
			ver2.x allowed access to all dimensions,
			but from ver3.0, access is limited to specific array elements.
		</p>
		<p>
			Although it is unlikely that many scripts perform such operations,
			caution is required when performing memory operations on string-type array variables.
		</p>

		<h3 id="FROM2_PEEK">Changes to the peek command</h3>
		<p>
			The peek command has become the peek function, but the string reading function that was supported in ver2.x has been abolished.
			To perform the equivalent process, use the getstr command with the delimiter character code set to 0.
		</p>

		<h3 id="FROM2_DIFF">Is HSP3 Difficult?</h3>
		<p>
			Some users who have used HSP2 may think that HSP3 has become more difficult because many new elements have been introduced.
		</p>
		<p>
			HSP3 is designed so that all users who have used HSP2 can migrate and use it.
			The biggest change in HSP3 is the introduction of functions, which allows you to describe what used to be commands
			inside mathematical expressions, but the functionality itself has not been changed.
			The many other features that have been added are mechanisms for extending HSP, such as module functions and
			external API calls (something similar to the loadlib related commands), which allow general users to easily use new features.
		</p>
		<p>
			HSP3 allows for more flexible writing, but since everyone has their own style,
			you can write the same way as in HSP2, and you don't have to use features you don't need.
			If you are used to HSP2, add the following line to the beginning of the script.
			Most of the major commands can be executed in the same way as in HSP2.
		</p>
		<pre>#include "hsp261cmp.as"		;Enable ver2.61 compatibility</pre>
		<p>
			This is because the ver2.61 compatible macros defined in "hsp261cmp.as" in the common folder
			convert the commands appropriately to operate in 3.0 and later versions.
			However, the current ver2.61 compatible macro is a beta version and does not support all descriptions. Also, the priority of calculation expressions is not changed.
			Although not perfect, scripts to a certain extent can be run as is in 3.0.
		</p>
		<p>
			After setting the ver2.61 compatible macro, be careful not to place ver3.x specific commands and definition files etc.
		</p>

		<!-- Footer -->
		<ul id="FOOTER">
			<li><a href="#CONTAINER">Return to the top of this page</a></li>
			<li><a href="../index.htm">Return to the list of documents</a></li>
			<li><a href="https://hsp.tv/">Go to HSPTV page</a></li>
		</ul>
		<a href="https://www.onionsoft.net/hsp/">
			<img src="img/onibtn.gif" width="147" height="50" alt="ONION software" id="ONIBTN">
		</a>
	</div><!-- container -->
</body>
</html>
